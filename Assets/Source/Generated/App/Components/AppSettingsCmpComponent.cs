//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AppContext {

    public AppEntity settingsCmpEntity { get { return GetGroup(AppMatcher.SettingsCmp).GetSingleEntity(); } }
    public Source.Ingame.Settings.Core.SettingsCmp settingsCmp { get { return settingsCmpEntity.settingsCmp; } }
    public bool hasSettingsCmp { get { return settingsCmpEntity != null; } }

    public AppEntity SetSettingsCmp(Ingame.Settings.Service.SettingsData newCurrentSettingsData) {
        if (hasSettingsCmp) {
            throw new Entitas.EntitasException("Could not set SettingsCmp!\n" + this + " already has an entity with Source.Ingame.Settings.Core.SettingsCmp!",
                "You should check if the context already has a settingsCmpEntity before setting it or use context.ReplaceSettingsCmp().");
        }
        var entity = CreateEntity();
        entity.AddSettingsCmp(newCurrentSettingsData);
        return entity;
    }

    public void ReplaceSettingsCmp(Ingame.Settings.Service.SettingsData newCurrentSettingsData) {
        var entity = settingsCmpEntity;
        if (entity == null) {
            entity = SetSettingsCmp(newCurrentSettingsData);
        } else {
            entity.ReplaceSettingsCmp(newCurrentSettingsData);
        }
    }

    public void RemoveSettingsCmp() {
        settingsCmpEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class AppEntity {

    public Source.Ingame.Settings.Core.SettingsCmp settingsCmp { get { return (Source.Ingame.Settings.Core.SettingsCmp)GetComponent(AppComponentsLookup.SettingsCmp); } }
    public bool hasSettingsCmp { get { return HasComponent(AppComponentsLookup.SettingsCmp); } }

    public void AddSettingsCmp(Ingame.Settings.Service.SettingsData newCurrentSettingsData) {
        var index = AppComponentsLookup.SettingsCmp;
        var component = (Source.Ingame.Settings.Core.SettingsCmp)CreateComponent(index, typeof(Source.Ingame.Settings.Core.SettingsCmp));
        component.currentSettingsData = newCurrentSettingsData;
        AddComponent(index, component);
    }

    public void ReplaceSettingsCmp(Ingame.Settings.Service.SettingsData newCurrentSettingsData) {
        var index = AppComponentsLookup.SettingsCmp;
        var component = (Source.Ingame.Settings.Core.SettingsCmp)CreateComponent(index, typeof(Source.Ingame.Settings.Core.SettingsCmp));
        component.currentSettingsData = newCurrentSettingsData;
        ReplaceComponent(index, component);
    }

    public void RemoveSettingsCmp() {
        RemoveComponent(AppComponentsLookup.SettingsCmp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class AppMatcher {

    static Entitas.IMatcher<AppEntity> _matcherSettingsCmp;

    public static Entitas.IMatcher<AppEntity> SettingsCmp {
        get {
            if (_matcherSettingsCmp == null) {
                var matcher = (Entitas.Matcher<AppEntity>)Entitas.Matcher<AppEntity>.AllOf(AppComponentsLookup.SettingsCmp);
                matcher.componentNames = AppComponentsLookup.componentNames;
                _matcherSettingsCmp = matcher;
            }

            return _matcherSettingsCmp;
        }
    }
}
