//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public PerformMeleeAttackReqListenerComponent performMeleeAttackReqListener { get { return (PerformMeleeAttackReqListenerComponent)GetComponent(GameplayComponentsLookup.PerformMeleeAttackReqListener); } }
    public bool hasPerformMeleeAttackReqListener { get { return HasComponent(GameplayComponentsLookup.PerformMeleeAttackReqListener); } }

    public void AddPerformMeleeAttackReqListener(System.Collections.Generic.List<IPerformMeleeAttackReqListener> newValue) {
        var index = GameplayComponentsLookup.PerformMeleeAttackReqListener;
        var component = (PerformMeleeAttackReqListenerComponent)CreateComponent(index, typeof(PerformMeleeAttackReqListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplacePerformMeleeAttackReqListener(System.Collections.Generic.List<IPerformMeleeAttackReqListener> newValue) {
        var index = GameplayComponentsLookup.PerformMeleeAttackReqListener;
        var component = (PerformMeleeAttackReqListenerComponent)CreateComponent(index, typeof(PerformMeleeAttackReqListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemovePerformMeleeAttackReqListener() {
        RemoveComponent(GameplayComponentsLookup.PerformMeleeAttackReqListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherPerformMeleeAttackReqListener;

    public static Entitas.IMatcher<GameplayEntity> PerformMeleeAttackReqListener {
        get {
            if (_matcherPerformMeleeAttackReqListener == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.PerformMeleeAttackReqListener);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherPerformMeleeAttackReqListener = matcher;
            }

            return _matcherPerformMeleeAttackReqListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public void AddPerformMeleeAttackReqListener(IPerformMeleeAttackReqListener value) {
        var listeners = hasPerformMeleeAttackReqListener
            ? performMeleeAttackReqListener.value
            : new System.Collections.Generic.List<IPerformMeleeAttackReqListener>();
        listeners.Add(value);
        ReplacePerformMeleeAttackReqListener(listeners);
    }

    public void RemovePerformMeleeAttackReqListener(IPerformMeleeAttackReqListener value, bool removeComponentWhenEmpty = true) {
        var listeners = performMeleeAttackReqListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemovePerformMeleeAttackReqListener();
        } else {
            ReplacePerformMeleeAttackReqListener(listeners);
        }
    }
}
