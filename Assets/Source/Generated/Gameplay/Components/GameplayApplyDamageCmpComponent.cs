//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public Ingame.Effects.ApplyDamageCmp applyDamageCmp { get { return (Ingame.Effects.ApplyDamageCmp)GetComponent(GameplayComponentsLookup.ApplyDamageCmp); } }
    public bool hasApplyDamageCmp { get { return HasComponent(GameplayComponentsLookup.ApplyDamageCmp); } }

    public void AddApplyDamageCmp(float newAmountOfDamage) {
        var index = GameplayComponentsLookup.ApplyDamageCmp;
        var component = (Ingame.Effects.ApplyDamageCmp)CreateComponent(index, typeof(Ingame.Effects.ApplyDamageCmp));
        component.amountOfDamage = newAmountOfDamage;
        AddComponent(index, component);
    }

    public void ReplaceApplyDamageCmp(float newAmountOfDamage) {
        var index = GameplayComponentsLookup.ApplyDamageCmp;
        var component = (Ingame.Effects.ApplyDamageCmp)CreateComponent(index, typeof(Ingame.Effects.ApplyDamageCmp));
        component.amountOfDamage = newAmountOfDamage;
        ReplaceComponent(index, component);
    }

    public void RemoveApplyDamageCmp() {
        RemoveComponent(GameplayComponentsLookup.ApplyDamageCmp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherApplyDamageCmp;

    public static Entitas.IMatcher<GameplayEntity> ApplyDamageCmp {
        get {
            if (_matcherApplyDamageCmp == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.ApplyDamageCmp);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherApplyDamageCmp = matcher;
            }

            return _matcherApplyDamageCmp;
        }
    }
}
