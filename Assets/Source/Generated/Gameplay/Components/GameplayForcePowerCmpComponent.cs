//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public Ingame.Ai.Bullet.Cmp.ForcePowerCmp forcePowerCmp { get { return (Ingame.Ai.Bullet.Cmp.ForcePowerCmp)GetComponent(GameplayComponentsLookup.ForcePowerCmp); } }
    public bool hasForcePowerCmp { get { return HasComponent(GameplayComponentsLookup.ForcePowerCmp); } }

    public void AddForcePowerCmp(float newForce) {
        var index = GameplayComponentsLookup.ForcePowerCmp;
        var component = (Ingame.Ai.Bullet.Cmp.ForcePowerCmp)CreateComponent(index, typeof(Ingame.Ai.Bullet.Cmp.ForcePowerCmp));
        component.force = newForce;
        AddComponent(index, component);
    }

    public void ReplaceForcePowerCmp(float newForce) {
        var index = GameplayComponentsLookup.ForcePowerCmp;
        var component = (Ingame.Ai.Bullet.Cmp.ForcePowerCmp)CreateComponent(index, typeof(Ingame.Ai.Bullet.Cmp.ForcePowerCmp));
        component.force = newForce;
        ReplaceComponent(index, component);
    }

    public void RemoveForcePowerCmp() {
        RemoveComponent(GameplayComponentsLookup.ForcePowerCmp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherForcePowerCmp;

    public static Entitas.IMatcher<GameplayEntity> ForcePowerCmp {
        get {
            if (_matcherForcePowerCmp == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.ForcePowerCmp);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherForcePowerCmp = matcher;
            }

            return _matcherForcePowerCmp;
        }
    }
}
