//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayContext {

    public GameplayEntity weaponHolderCmpEntity { get { return GetGroup(GameplayMatcher.WeaponHolderCmp).GetSingleEntity(); } }
    public Ingame.Gunplay.Sway.WeaponSwitch.WeaponHolderCmp weaponHolderCmp { get { return weaponHolderCmpEntity.weaponHolderCmp; } }
    public bool hasWeaponHolderCmp { get { return weaponHolderCmpEntity != null; } }

    public GameplayEntity SetWeaponHolderCmp(EcsSupport.UnityIntegration.GameplayEntityReference[] newWeapons, int newCurrentWeaponIndex) {
        if (hasWeaponHolderCmp) {
            throw new Entitas.EntitasException("Could not set WeaponHolderCmp!\n" + this + " already has an entity with Ingame.Gunplay.Sway.WeaponSwitch.WeaponHolderCmp!",
                "You should check if the context already has a weaponHolderCmpEntity before setting it or use context.ReplaceWeaponHolderCmp().");
        }
        var entity = CreateEntity();
        entity.AddWeaponHolderCmp(newWeapons, newCurrentWeaponIndex);
        return entity;
    }

    public void ReplaceWeaponHolderCmp(EcsSupport.UnityIntegration.GameplayEntityReference[] newWeapons, int newCurrentWeaponIndex) {
        var entity = weaponHolderCmpEntity;
        if (entity == null) {
            entity = SetWeaponHolderCmp(newWeapons, newCurrentWeaponIndex);
        } else {
            entity.ReplaceWeaponHolderCmp(newWeapons, newCurrentWeaponIndex);
        }
    }

    public void RemoveWeaponHolderCmp() {
        weaponHolderCmpEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public Ingame.Gunplay.Sway.WeaponSwitch.WeaponHolderCmp weaponHolderCmp { get { return (Ingame.Gunplay.Sway.WeaponSwitch.WeaponHolderCmp)GetComponent(GameplayComponentsLookup.WeaponHolderCmp); } }
    public bool hasWeaponHolderCmp { get { return HasComponent(GameplayComponentsLookup.WeaponHolderCmp); } }

    public void AddWeaponHolderCmp(EcsSupport.UnityIntegration.GameplayEntityReference[] newWeapons, int newCurrentWeaponIndex) {
        var index = GameplayComponentsLookup.WeaponHolderCmp;
        var component = (Ingame.Gunplay.Sway.WeaponSwitch.WeaponHolderCmp)CreateComponent(index, typeof(Ingame.Gunplay.Sway.WeaponSwitch.WeaponHolderCmp));
        component.weapons = newWeapons;
        component.currentWeaponIndex = newCurrentWeaponIndex;
        AddComponent(index, component);
    }

    public void ReplaceWeaponHolderCmp(EcsSupport.UnityIntegration.GameplayEntityReference[] newWeapons, int newCurrentWeaponIndex) {
        var index = GameplayComponentsLookup.WeaponHolderCmp;
        var component = (Ingame.Gunplay.Sway.WeaponSwitch.WeaponHolderCmp)CreateComponent(index, typeof(Ingame.Gunplay.Sway.WeaponSwitch.WeaponHolderCmp));
        component.weapons = newWeapons;
        component.currentWeaponIndex = newCurrentWeaponIndex;
        ReplaceComponent(index, component);
    }

    public void RemoveWeaponHolderCmp() {
        RemoveComponent(GameplayComponentsLookup.WeaponHolderCmp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherWeaponHolderCmp;

    public static Entitas.IMatcher<GameplayEntity> WeaponHolderCmp {
        get {
            if (_matcherWeaponHolderCmp == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.WeaponHolderCmp);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherWeaponHolderCmp = matcher;
            }

            return _matcherWeaponHolderCmp;
        }
    }
}
