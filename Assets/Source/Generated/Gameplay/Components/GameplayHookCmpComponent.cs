//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayContext {

    public GameplayEntity hookCmpEntity { get { return GetGroup(GameplayMatcher.HookCmp).GetSingleEntity(); } }
    public Ingame.Player.Abilities.Hook.HookCmp hookCmp { get { return hookCmpEntity.hookCmp; } }
    public bool hasHookCmp { get { return hookCmpEntity != null; } }

    public GameplayEntity SetHookCmp(float newCooldown, float newSpeed, float newTargetDetectionAngle, float newTimePassedSinceLastUsage, float newTimePassedFlying) {
        if (hasHookCmp) {
            throw new Entitas.EntitasException("Could not set HookCmp!\n" + this + " already has an entity with Ingame.Player.Abilities.Hook.HookCmp!",
                "You should check if the context already has a hookCmpEntity before setting it or use context.ReplaceHookCmp().");
        }
        var entity = CreateEntity();
        entity.AddHookCmp(newCooldown, newSpeed, newTargetDetectionAngle, newTimePassedSinceLastUsage, newTimePassedFlying);
        return entity;
    }

    public void ReplaceHookCmp(float newCooldown, float newSpeed, float newTargetDetectionAngle, float newTimePassedSinceLastUsage, float newTimePassedFlying) {
        var entity = hookCmpEntity;
        if (entity == null) {
            entity = SetHookCmp(newCooldown, newSpeed, newTargetDetectionAngle, newTimePassedSinceLastUsage, newTimePassedFlying);
        } else {
            entity.ReplaceHookCmp(newCooldown, newSpeed, newTargetDetectionAngle, newTimePassedSinceLastUsage, newTimePassedFlying);
        }
    }

    public void RemoveHookCmp() {
        hookCmpEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public Ingame.Player.Abilities.Hook.HookCmp hookCmp { get { return (Ingame.Player.Abilities.Hook.HookCmp)GetComponent(GameplayComponentsLookup.HookCmp); } }
    public bool hasHookCmp { get { return HasComponent(GameplayComponentsLookup.HookCmp); } }

    public void AddHookCmp(float newCooldown, float newSpeed, float newTargetDetectionAngle, float newTimePassedSinceLastUsage, float newTimePassedFlying) {
        var index = GameplayComponentsLookup.HookCmp;
        var component = (Ingame.Player.Abilities.Hook.HookCmp)CreateComponent(index, typeof(Ingame.Player.Abilities.Hook.HookCmp));
        component.cooldown = newCooldown;
        component.speed = newSpeed;
        component.targetDetectionAngle = newTargetDetectionAngle;
        component.timePassedSinceLastUsage = newTimePassedSinceLastUsage;
        component.timePassedFlying = newTimePassedFlying;
        AddComponent(index, component);
    }

    public void ReplaceHookCmp(float newCooldown, float newSpeed, float newTargetDetectionAngle, float newTimePassedSinceLastUsage, float newTimePassedFlying) {
        var index = GameplayComponentsLookup.HookCmp;
        var component = (Ingame.Player.Abilities.Hook.HookCmp)CreateComponent(index, typeof(Ingame.Player.Abilities.Hook.HookCmp));
        component.cooldown = newCooldown;
        component.speed = newSpeed;
        component.targetDetectionAngle = newTargetDetectionAngle;
        component.timePassedSinceLastUsage = newTimePassedSinceLastUsage;
        component.timePassedFlying = newTimePassedFlying;
        ReplaceComponent(index, component);
    }

    public void RemoveHookCmp() {
        RemoveComponent(GameplayComponentsLookup.HookCmp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherHookCmp;

    public static Entitas.IMatcher<GameplayEntity> HookCmp {
        get {
            if (_matcherHookCmp == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.HookCmp);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherHookCmp = matcher;
            }

            return _matcherHookCmp;
        }
    }
}
