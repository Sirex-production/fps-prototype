//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public Ingame.Ai.Bullet.Cmp.DirectionCmp directionCmp { get { return (Ingame.Ai.Bullet.Cmp.DirectionCmp)GetComponent(GameplayComponentsLookup.DirectionCmp); } }
    public bool hasDirectionCmp { get { return HasComponent(GameplayComponentsLookup.DirectionCmp); } }

    public void AddDirectionCmp(UnityEngine.Vector3 newDirection) {
        var index = GameplayComponentsLookup.DirectionCmp;
        var component = (Ingame.Ai.Bullet.Cmp.DirectionCmp)CreateComponent(index, typeof(Ingame.Ai.Bullet.Cmp.DirectionCmp));
        component.direction = newDirection;
        AddComponent(index, component);
    }

    public void ReplaceDirectionCmp(UnityEngine.Vector3 newDirection) {
        var index = GameplayComponentsLookup.DirectionCmp;
        var component = (Ingame.Ai.Bullet.Cmp.DirectionCmp)CreateComponent(index, typeof(Ingame.Ai.Bullet.Cmp.DirectionCmp));
        component.direction = newDirection;
        ReplaceComponent(index, component);
    }

    public void RemoveDirectionCmp() {
        RemoveComponent(GameplayComponentsLookup.DirectionCmp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherDirectionCmp;

    public static Entitas.IMatcher<GameplayEntity> DirectionCmp {
        get {
            if (_matcherDirectionCmp == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.DirectionCmp);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherDirectionCmp = matcher;
            }

            return _matcherDirectionCmp;
        }
    }
}
