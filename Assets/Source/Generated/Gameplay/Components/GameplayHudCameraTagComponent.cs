//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayContext {

    public GameplayEntity hudCameraTagEntity { get { return GetGroup(GameplayMatcher.HudCameraTag).GetSingleEntity(); } }

    public bool hasHudCameraTag {
        get { return hudCameraTagEntity != null; }
        set {
            var entity = hudCameraTagEntity;
            if (value != (entity != null)) {
                if (value) {
                    CreateEntity().hasHudCameraTag = true;
                } else {
                    entity.Destroy();
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    static readonly Ingame.Camerawork.HudCameraTag hudCameraTagComponent = new Ingame.Camerawork.HudCameraTag();

    public bool hasHudCameraTag {
        get { return HasComponent(GameplayComponentsLookup.HudCameraTag); }
        set {
            if (value != hasHudCameraTag) {
                var index = GameplayComponentsLookup.HudCameraTag;
                if (value) {
                    var componentPool = GetComponentPool(index);
                    var component = componentPool.Count > 0
                            ? componentPool.Pop()
                            : hudCameraTagComponent;

                    AddComponent(index, component);
                } else {
                    RemoveComponent(index);
                }
            }
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherHudCameraTag;

    public static Entitas.IMatcher<GameplayEntity> HudCameraTag {
        get {
            if (_matcherHudCameraTag == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.HudCameraTag);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherHudCameraTag = matcher;
            }

            return _matcherHudCameraTag;
        }
    }
}
