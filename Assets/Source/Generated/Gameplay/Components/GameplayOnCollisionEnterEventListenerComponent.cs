//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public OnCollisionEnterEventListenerComponent onCollisionEnterEventListener { get { return (OnCollisionEnterEventListenerComponent)GetComponent(GameplayComponentsLookup.OnCollisionEnterEventListener); } }
    public bool hasOnCollisionEnterEventListener { get { return HasComponent(GameplayComponentsLookup.OnCollisionEnterEventListener); } }

    public void AddOnCollisionEnterEventListener(System.Collections.Generic.List<IOnCollisionEnterEventListener> newValue) {
        var index = GameplayComponentsLookup.OnCollisionEnterEventListener;
        var component = (OnCollisionEnterEventListenerComponent)CreateComponent(index, typeof(OnCollisionEnterEventListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceOnCollisionEnterEventListener(System.Collections.Generic.List<IOnCollisionEnterEventListener> newValue) {
        var index = GameplayComponentsLookup.OnCollisionEnterEventListener;
        var component = (OnCollisionEnterEventListenerComponent)CreateComponent(index, typeof(OnCollisionEnterEventListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveOnCollisionEnterEventListener() {
        RemoveComponent(GameplayComponentsLookup.OnCollisionEnterEventListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherOnCollisionEnterEventListener;

    public static Entitas.IMatcher<GameplayEntity> OnCollisionEnterEventListener {
        get {
            if (_matcherOnCollisionEnterEventListener == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.OnCollisionEnterEventListener);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherOnCollisionEnterEventListener = matcher;
            }

            return _matcherOnCollisionEnterEventListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public void AddOnCollisionEnterEventListener(IOnCollisionEnterEventListener value) {
        var listeners = hasOnCollisionEnterEventListener
            ? onCollisionEnterEventListener.value
            : new System.Collections.Generic.List<IOnCollisionEnterEventListener>();
        listeners.Add(value);
        ReplaceOnCollisionEnterEventListener(listeners);
    }

    public void RemoveOnCollisionEnterEventListener(IOnCollisionEnterEventListener value, bool removeComponentWhenEmpty = true) {
        var listeners = onCollisionEnterEventListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveOnCollisionEnterEventListener();
        } else {
            ReplaceOnCollisionEnterEventListener(listeners);
        }
    }
}
