//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayContext {

    public GameplayEntity bulletPoolCmpEntity { get { return GetGroup(GameplayMatcher.BulletPoolCmp).GetSingleEntity(); } }
    public Ingame.Ai.Bullet.Cmp.BulletPoolCmp bulletPoolCmp { get { return bulletPoolCmpEntity.bulletPoolCmp; } }
    public bool hasBulletPoolCmp { get { return bulletPoolCmpEntity != null; } }

    public GameplayEntity SetBulletPoolCmp(System.Collections.Generic.Dictionary<System.Type, UnityEngine.Pool.IObjectPool<GameplayEntity>> newPools) {
        if (hasBulletPoolCmp) {
            throw new Entitas.EntitasException("Could not set BulletPoolCmp!\n" + this + " already has an entity with Ingame.Ai.Bullet.Cmp.BulletPoolCmp!",
                "You should check if the context already has a bulletPoolCmpEntity before setting it or use context.ReplaceBulletPoolCmp().");
        }
        var entity = CreateEntity();
        entity.AddBulletPoolCmp(newPools);
        return entity;
    }

    public void ReplaceBulletPoolCmp(System.Collections.Generic.Dictionary<System.Type, UnityEngine.Pool.IObjectPool<GameplayEntity>> newPools) {
        var entity = bulletPoolCmpEntity;
        if (entity == null) {
            entity = SetBulletPoolCmp(newPools);
        } else {
            entity.ReplaceBulletPoolCmp(newPools);
        }
    }

    public void RemoveBulletPoolCmp() {
        bulletPoolCmpEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public Ingame.Ai.Bullet.Cmp.BulletPoolCmp bulletPoolCmp { get { return (Ingame.Ai.Bullet.Cmp.BulletPoolCmp)GetComponent(GameplayComponentsLookup.BulletPoolCmp); } }
    public bool hasBulletPoolCmp { get { return HasComponent(GameplayComponentsLookup.BulletPoolCmp); } }

    public void AddBulletPoolCmp(System.Collections.Generic.Dictionary<System.Type, UnityEngine.Pool.IObjectPool<GameplayEntity>> newPools) {
        var index = GameplayComponentsLookup.BulletPoolCmp;
        var component = (Ingame.Ai.Bullet.Cmp.BulletPoolCmp)CreateComponent(index, typeof(Ingame.Ai.Bullet.Cmp.BulletPoolCmp));
        component.pools = newPools;
        AddComponent(index, component);
    }

    public void ReplaceBulletPoolCmp(System.Collections.Generic.Dictionary<System.Type, UnityEngine.Pool.IObjectPool<GameplayEntity>> newPools) {
        var index = GameplayComponentsLookup.BulletPoolCmp;
        var component = (Ingame.Ai.Bullet.Cmp.BulletPoolCmp)CreateComponent(index, typeof(Ingame.Ai.Bullet.Cmp.BulletPoolCmp));
        component.pools = newPools;
        ReplaceComponent(index, component);
    }

    public void RemoveBulletPoolCmp() {
        RemoveComponent(GameplayComponentsLookup.BulletPoolCmp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherBulletPoolCmp;

    public static Entitas.IMatcher<GameplayEntity> BulletPoolCmp {
        get {
            if (_matcherBulletPoolCmp == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.BulletPoolCmp);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherBulletPoolCmp = matcher;
            }

            return _matcherBulletPoolCmp;
        }
    }
}
