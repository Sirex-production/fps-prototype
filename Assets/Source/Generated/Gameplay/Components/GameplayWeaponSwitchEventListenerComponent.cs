//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public WeaponSwitchEventListenerComponent weaponSwitchEventListener { get { return (WeaponSwitchEventListenerComponent)GetComponent(GameplayComponentsLookup.WeaponSwitchEventListener); } }
    public bool hasWeaponSwitchEventListener { get { return HasComponent(GameplayComponentsLookup.WeaponSwitchEventListener); } }

    public void AddWeaponSwitchEventListener(System.Collections.Generic.List<IWeaponSwitchEventListener> newValue) {
        var index = GameplayComponentsLookup.WeaponSwitchEventListener;
        var component = (WeaponSwitchEventListenerComponent)CreateComponent(index, typeof(WeaponSwitchEventListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWeaponSwitchEventListener(System.Collections.Generic.List<IWeaponSwitchEventListener> newValue) {
        var index = GameplayComponentsLookup.WeaponSwitchEventListener;
        var component = (WeaponSwitchEventListenerComponent)CreateComponent(index, typeof(WeaponSwitchEventListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWeaponSwitchEventListener() {
        RemoveComponent(GameplayComponentsLookup.WeaponSwitchEventListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherWeaponSwitchEventListener;

    public static Entitas.IMatcher<GameplayEntity> WeaponSwitchEventListener {
        get {
            if (_matcherWeaponSwitchEventListener == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.WeaponSwitchEventListener);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherWeaponSwitchEventListener = matcher;
            }

            return _matcherWeaponSwitchEventListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public void AddWeaponSwitchEventListener(IWeaponSwitchEventListener value) {
        var listeners = hasWeaponSwitchEventListener
            ? weaponSwitchEventListener.value
            : new System.Collections.Generic.List<IWeaponSwitchEventListener>();
        listeners.Add(value);
        ReplaceWeaponSwitchEventListener(listeners);
    }

    public void RemoveWeaponSwitchEventListener(IWeaponSwitchEventListener value, bool removeComponentWhenEmpty = true) {
        var listeners = weaponSwitchEventListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveWeaponSwitchEventListener();
        } else {
            ReplaceWeaponSwitchEventListener(listeners);
        }
    }
}
