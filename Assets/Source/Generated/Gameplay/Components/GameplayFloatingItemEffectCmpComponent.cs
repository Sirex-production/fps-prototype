//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public Ingame.Vfx.ShotTrail.FloatingEffect.FloatingItemEffectCmp floatingItemEffectCmp { get { return (Ingame.Vfx.ShotTrail.FloatingEffect.FloatingItemEffectCmp)GetComponent(GameplayComponentsLookup.FloatingItemEffectCmp); } }
    public bool hasFloatingItemEffectCmp { get { return HasComponent(GameplayComponentsLookup.FloatingItemEffectCmp); } }

    public void AddFloatingItemEffectCmp(UnityEngine.AnimationCurve newFloatingCurve, float newSpeed, float newStrength, float newRotationSpeed, float newCurrentFloatingTime) {
        var index = GameplayComponentsLookup.FloatingItemEffectCmp;
        var component = (Ingame.Vfx.ShotTrail.FloatingEffect.FloatingItemEffectCmp)CreateComponent(index, typeof(Ingame.Vfx.ShotTrail.FloatingEffect.FloatingItemEffectCmp));
        component.floatingCurve = newFloatingCurve;
        component.speed = newSpeed;
        component.strength = newStrength;
        component.rotationSpeed = newRotationSpeed;
        component.currentFloatingTime = newCurrentFloatingTime;
        AddComponent(index, component);
    }

    public void ReplaceFloatingItemEffectCmp(UnityEngine.AnimationCurve newFloatingCurve, float newSpeed, float newStrength, float newRotationSpeed, float newCurrentFloatingTime) {
        var index = GameplayComponentsLookup.FloatingItemEffectCmp;
        var component = (Ingame.Vfx.ShotTrail.FloatingEffect.FloatingItemEffectCmp)CreateComponent(index, typeof(Ingame.Vfx.ShotTrail.FloatingEffect.FloatingItemEffectCmp));
        component.floatingCurve = newFloatingCurve;
        component.speed = newSpeed;
        component.strength = newStrength;
        component.rotationSpeed = newRotationSpeed;
        component.currentFloatingTime = newCurrentFloatingTime;
        ReplaceComponent(index, component);
    }

    public void RemoveFloatingItemEffectCmp() {
        RemoveComponent(GameplayComponentsLookup.FloatingItemEffectCmp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherFloatingItemEffectCmp;

    public static Entitas.IMatcher<GameplayEntity> FloatingItemEffectCmp {
        get {
            if (_matcherFloatingItemEffectCmp == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.FloatingItemEffectCmp);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherFloatingItemEffectCmp = matcher;
            }

            return _matcherFloatingItemEffectCmp;
        }
    }
}
