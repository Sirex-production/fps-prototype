//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameplayEntity {

    public Ingame.Player.Movement.VelocityCmp velocityCmp { get { return (Ingame.Player.Movement.VelocityCmp)GetComponent(GameplayComponentsLookup.VelocityCmp); } }
    public bool hasVelocityCmp { get { return HasComponent(GameplayComponentsLookup.VelocityCmp); } }

    public void AddVelocityCmp(UnityEngine.Vector3 newCurrentVelocity) {
        var index = GameplayComponentsLookup.VelocityCmp;
        var component = (Ingame.Player.Movement.VelocityCmp)CreateComponent(index, typeof(Ingame.Player.Movement.VelocityCmp));
        component.currentVelocity = newCurrentVelocity;
        AddComponent(index, component);
    }

    public void ReplaceVelocityCmp(UnityEngine.Vector3 newCurrentVelocity) {
        var index = GameplayComponentsLookup.VelocityCmp;
        var component = (Ingame.Player.Movement.VelocityCmp)CreateComponent(index, typeof(Ingame.Player.Movement.VelocityCmp));
        component.currentVelocity = newCurrentVelocity;
        ReplaceComponent(index, component);
    }

    public void RemoveVelocityCmp() {
        RemoveComponent(GameplayComponentsLookup.VelocityCmp);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameplayMatcher {

    static Entitas.IMatcher<GameplayEntity> _matcherVelocityCmp;

    public static Entitas.IMatcher<GameplayEntity> VelocityCmp {
        get {
            if (_matcherVelocityCmp == null) {
                var matcher = (Entitas.Matcher<GameplayEntity>)Entitas.Matcher<GameplayEntity>.AllOf(GameplayComponentsLookup.VelocityCmp);
                matcher.componentNames = GameplayComponentsLookup.componentNames;
                _matcherVelocityCmp = matcher;
            }

            return _matcherVelocityCmp;
        }
    }
}
